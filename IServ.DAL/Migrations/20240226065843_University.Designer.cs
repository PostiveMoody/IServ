// <auto-generated />
using System;
using IServ.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IServ.DAL.Migrations
{
    [DbContext(typeof(ServDbContext))]
    [Migration("20240226065843_University")]
    partial class University
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("UniversityIdSequence")
                .HasMin(1L)
                .HasMax(100000L);

            modelBuilder.Entity("IServ.Domain.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR UniversityIdSequence");

                    b.Property<string>("AlphaTwoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniversityId");

                    b.ToTable("University", (string)null);
                });

            modelBuilder.Entity("IServ.Domain.WebPage", b =>
                {
                    b.Property<int>("WebPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebPageId"));

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.Property<string>("WebPageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageUrlAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebPageId");

                    b.HasIndex("UniversityId");

                    b.ToTable("WebPage");
                });

            modelBuilder.Entity("IServ.Domain.WebPageDomain", b =>
                {
                    b.Property<int>("WebPageDomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebPageDomainId"));

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.Property<string>("WebPageDomainFourthLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageDomainFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageDomainProtocol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageDomainRoot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageDomainSecondLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPageDomainThirdLevel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebPageDomainId");

                    b.HasIndex("UniversityId");

                    b.ToTable("WebPageDomain");
                });

            modelBuilder.Entity("IServ.Domain.WebPage", b =>
                {
                    b.HasOne("IServ.Domain.University", null)
                        .WithMany("WebPages")
                        .HasForeignKey("UniversityId");
                });

            modelBuilder.Entity("IServ.Domain.WebPageDomain", b =>
                {
                    b.HasOne("IServ.Domain.University", null)
                        .WithMany("WebPageDomains")
                        .HasForeignKey("UniversityId");
                });

            modelBuilder.Entity("IServ.Domain.University", b =>
                {
                    b.Navigation("WebPageDomains");

                    b.Navigation("WebPages");
                });
#pragma warning restore 612, 618
        }
    }
}
